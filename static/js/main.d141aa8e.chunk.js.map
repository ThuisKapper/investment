{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Contact.js","Sidebar.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","src","height","alt","id","this","props","account","Component","Home","style","whitepaperStyle","background","Contact","name","React","Sidebar","BurgerMenu","title","width","react_router_dom","exact","activeClassName","to","class","Web3","require","App","_this$state","_this","Object","classCallCheck","tokenName","tokenSymbol","tokenDecimals","tokenAddress","tokenImage","tokenNet","message","errorMessage","net","possibleConstructorReturn","getPrototypeOf","call","_addTestAlert","setState","content","refs","waarde","value","tktWaarde","_connectWallet","loadWeb3","loadBlockchainData","isToggleOn","state","postCount","posts","loading","defineProperty","updateNet","window","ethereum","web3","enable","currentProvider","eth","getAccounts","accounts","getId","provider","Eth","net_version","realNet","context","_this2","add_to_mmask","onClick","_ref","asyncToGenerator","regenerator_default","mark","_callee4","event","wrap","_context4","prev","next","sendAsync","method","params","type","options","address","symbol","decimals","image","Math","round","random","err","added","console","log","stop","_x","apply","arguments","search","location","queryString","parse","key","placeholder","onChange","ref","components_Navbar","pageWrapId","outerContainerId","react_router","path","component","contextTypes","PropTypes","object","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d141aa8e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top color-nav flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"https://tkt.thuiskapper.app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src=\"https://cdn.thuiskapper.app/logos/logo-thuiskapper.png\" height=\"40px\" alt=\"ThuisKapper logo\"></img>\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nexport default function Home() {\n  return (\n\n      <div >\n        <div style={whitepaperStyle}>\n          <h1>Whitepaper ThuisKapperToken (TKT)</h1>\n          <p>ThuisKapperTokens (TKT), a new cryptocurrency created to represent and support the production and promotion of our ThuisKapper.app web- platform and iOS and Android application. Our platform is created for mobile barbers and hairdressers to seek and find clients near their location in The Netherlands.</p>\n\n          <p>This document will relay all information about the use cases of our TKT, including it’s structure, distribution, utility and timeline’s for our planned development. Overtime changes and updates will be featured in this document which is available at: https://tkt.thuiskapper.app.</p>\n\n          <h2>Platform for Barbers and Hairdressers</h2>\n          <p>Our platform was invented after the first wave of Covid-19 in 2020 and we launched in the last semester of 2020. It has been around 9 months since we officially launched our beta version of thuiskapper.app. We have run a test cycle with 1 barber located in Rotterdam.</p>\n\n          <p>During that cycle we experienced how easy it was for the barber to communicate with the clients through our platform. We also personally asked the clients and barbers for their opinions and if they had any suggestions to make our platform more customer friendly, which we have implanted into our platform.</p>\n\n          <h2>An existing company, backed by a cryptocurrency</h2>\n          <p>Become part of our company and earn your part and share of the profits generated by our platform. Our ThuisKapper.app platform will be solo backed by individual investors who will directory own a part of the company’s liquidity through the BSC blockchain (Binance Smart Chain). All profit’s that are being generated throughout our ThuisKapper.app platform fee’s will be divided as following back into the company:</p>\n          <ul>\n          <li>33% Liquidity will be used for: paid promotion like social ads and Adwords for example. They will be spend directly back into growth of the company.</li>\n          <li>33% Liquidity will be used for: workers and infrastructure within the company such as: devices to automate certain processes with Python.</li>\n          <li>34% Liquidity will constantly be added in our own TKT liquidity pool to increase the value of TKT.</li>\n          </ul>\n          <p>Eventually the Paid promotion and workers / infrastructure liquidity percentages may differ from original. The 34% Liquidity that we will add into to the pool will stay forever until we are at the moon!</p>\n\n          <h3>Paid Promotions</h3>\n          <p>For paid promotions we will be using social media platforms as: Instagram, Facebook and Google Adwords. We currently having good results and our Adwords promotions and are looking forward to extend our promo’s to the Facebook and Instagram marketplaces.</p>\n\n          <h3>Workers and infrastructure</h3>\n          <p>Personal can’t work for free unfortunately, but lucky as we are Python does work for free but only costs us a little bit of electricity and time to program to our desires. To increase the visits of our platform we want to build multiple web- data scrapers to contact barbers and hairdressers to start working for us as we can easy find the clientell.</p>\n\n          <p>One example is a Dutch online open market place: www.marktplaats.nl, where mobile barbers create advertisements for their services on location. We can build Python automation bots that will automatically contact (New) barbers or mobile hairdressers through WhatsApp when their WhatsApp phone number has not been found yet in our database.</p>\n          <p>We want to create a certain amount of automatization tools in order to keep the platform running 24/7 without actually someone have to work, besides customer support. A lot of python tools take a lot of RAM and good infrastructure of devices and security which require funds  and time to be created and to keep the computers running.</p>\n\n\n          <h2>TKT Liquidity Pool</h2>\n          <ul>\n          <li><strong>TKT Contract Adres (BSC Scan): 0x8a8d90d6b15cb15a5921884bec1c5bb9bfbf22f1</strong></li>\n          </ul>\n\n          <h2>Token Distribution</h2>\n          <p>Initial Pre-Sale will be valued at 0,08$ per TKT and there will be a limited supply available through the pre-sale which will be 2,000,000 TKT tokens. After the presale we will provide the liquidity and will slowly bring 8,000,000 TKT to the market in late 2021 / 2022.</p>\n          <p>We will keep 20,000,000 tokens aside each kept on different adreses (10M e/a) for future extension to other country’s and development purposes. When we have more information about expansion we will update our white paper to clarify our business progress.</p>\n          <h2>Project Development</h2>\n          <p>Information following a.s.a.p.</p>\n          <h2>Legal Disclaimer</h2>\n<h3>DEFINITIONS</h3>\n<p>DAO (Decentralized Autonomous Organization) means that the organization represented by a series of smart contracts publishing on the BSC (Binance Smart Chain). Which, when launched will be eventually controlled by the users of the ThuisKapper Platform.</p><br />\n\n<strong>“ThuisKapper” in this meaning stands for “ThuisKapper.app”, a commonwealth of Purmerend corporation.</strong><br />\n<strong>“ThuisKapper Platform” means the platform and applications which are published through Desktop or Mobile devices, aswell as on the Apple AppStore and Google Play.</strong><br />\n<strong>“User” references to any individual and or entity using the ThuisKapper platform or Web3 application.</strong><br /><br />\n<h3>LEGAL DISCLAIMER</h3>\n\n<p>This Whitepaper is for all general information purposes about our ThuisKapper.app Project. It does not include financial advise or recommendations or any form of solicitation. For all information published over time, ThuisKapper.app remains the right to update the information provided by our company.</p>\n<p>ThuisKapper created the TKT token to reward barbers and users that will using our platform. We also have the idea of adding a webshop to our platform in the near future where our barbers and other web- based clients will be able to purchase their tools and items, using TKT. Barbers will be able to earn rewards according to their weekly, monthly and yearly points they have generated when cutting clients at home. We have made the decision to start using web3 based dApps because the security protocol of the blockchain lies so much higher than a centralized MySQL database for storing passwords and user sensitive data. No TKT token will represent any economic interest in ThuisKapper at any time, and ThuisKapper developed TKT for the purpose of use within the ThuisKapper Platform.</p>\n<p>Through the development of the TKT, ThuisKapper does not grant any rights, express, or implied other than the right to use TKT on our ThuisKapper Platform or within the DAO. We deny any ability of the TKT token to be represented or conferred any ownership right, share, security or equivalent rights. We also deny the right to receive future revenue shares, or any other form of participation in / or related to ThuisKapper or our ThuisKapper Platform and any of its corporate affiliates.\nThuisKapper reserves the right to fully reject the usage of TKT tokens on the ThuisKapper Platform. ThuisKapper will be not be responsible for any direct or consequential loss or damage from any kind arising directly or indirectly from: (1) Applicable to any information provided, (2) Any miscommunication, error, inaccuracy or any such information; or - any action resulting from such information.</p>\n<p>To fully extend permitted by applicable law and except otherwise when specified in writing by ThuisKapper:</p>\n<p>(1) TKT tokens are provided on an “as available” or “as is” basis without warranty of any kind. Our thuisKapper disclaimer is about all implied warranties as the TKT tokens, including and without limitation or implied warranties of merchantability. (2) ThuisKapper does not represent or warrant the TKT tokens that are reliable, current, error-free, or that technical defects in TKT tokens will be corrected.</p>\n<p>In this Whitepaper, there will be no terms that constitute a prospectus, offer document of any kind or are intended to constitute an offer of securities or solicitation for investment in securities. When you have received your TKT tokens, please not that our ThuisKapper Platform contributes and / or participating do not represent, or constitute or involve the values created or formed by exchanges. This could be due to any form of security, investment units and form of ordinary project shares, in any platform.</p>\n<p>TKT Whitepaper in any part, or copy there for must not be transmitted to any country where distribution or dissemination of these documents and relevant information is restricted or prohibited. No regulated authority has examined or approved this, until today about the information set in this white paper. Publication, distribution and dissemination of these terms do not imply that applicable laws, regulatory requirements or rules have complied with it.</p>\n<p>To examine this document to the fullest permitted by applicable laws, regulations and rules, ThuisKapper and our ThuisKapper Platform, it’s founder’s, team, users and barbers or any other third party will not be involved in our project and shall not be liable for any direct or indirect loss of any kind. Not in contracts or otherwise loss of revenue, income or profits and loss of use or data. Every user or barber that will use the ThuisKapper platform will automatically be in acceptance of the information provided by our Whitepaper, visitable by the link provided in the first part of this document.</p>\n<p>All statements in our Whitepaper, ThuisKapper Platform or other Thuiskapper relative pages made in press releases or in any place accessible by the public, that may be made by ThuisKapper, it’s founders, team or any other third party involved in ThuisKapper Platform, are not statements of historical facts constituting “Forward-looking statements”. Information provided in this white paper should not be consider to be business, legal, financial advise or contribution or participation to the development of the ThuisKapper network or any of it’s related projects. ThuisKapper does not intend to make disclaims or any representation, warranty or undertaking of any form whatsoever to any entity or person. This includes any representation or warranty / undertaking in relation to the truth, accuracy and completeness of the information publishing in our TKT Whitepaper.</p>\n<p>All ThuisKapper token holders are responsible for implementing reasonable measures for security of their own wallet, vault or other related storing mechanism used for holding ThuisKapper tokens, including the requisite private key(s) or other credentials necessary to acces their wallet or storing mechanism. When private key’s or other credentials are lost, the holder might lose the access to their TKT tokens, therefor we are not responsible in the case of users not storing their data safely. We will not have not obligations in any form to you in favor of our ThuisKapper tokens. ThuisKapper is not responsible for lose, cost, or expenses in relation to lost access credentials. The token holder holds the responsibility to withhold, collect, send, transfer or secure his own TKT and remit the correct taxes to the appropriate tax authorities regarding any received ThuisKapperTokens (TKT).</p>\n<p>Prior to the DAO launch our ThuisKapper token and ThuisKapper platform will maintain the control over the protocol. Upon the launch of our DAO, ThuisKapper will no longer maintain any control of the price and any financial fluctuations of whatsoever. ThuisKapper expressly denies all responsibility for any transactions occurred though the BSC (Binance Smart Chain) or any other third party. ThuisKapper maintains the sole discretion to launch the SPS token on a different blockchain, without requiring to launch on the BSC or any blockchain whatsoever.</p>\n      </div>\n      </div>\n\n  )\n}\n\nconst whitepaperStyle = {\n  background: 'white'\n}\n","import React from 'react';\n\nclass Contact extends React.Component {\n  render() {\n    return <h1>Hello, {this.props.name}</h1>;\n  }\n}\nexport default Contact;\n","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\n\nexport default props => {\n  return (\n    <Menu>\n      <a id=\"home_logo\" href=\"https://tkt.thuiskapper.app/\" title=\"ThuisKapper\">\n        <img src=\"https://cdn.thuiskapper.app/images/thuiskapper-groen-logo.png\" height=\"37px\" width=\"180px\" alt=\"ThuisKapper logo groen\" />\n      </a>\n      <Router>\n        <NavLink exact activeClassName=\"active\" to =\"/\">  <i class=\"fas fa-scroll\"></i> Whitepaper</NavLink>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thuiskapper.app\"><i class=\"fas fa-atom\"></i> Our Platform</a>\n        <a target=\"_blank\" href=\"https://www.thuiskapper.app/aanmelden/\" rel=\"noopener noreferrer\">  <i class=\"fas fa-cut\"></i> Cut clients for us</a>\n        <a target=\"_blank\" href=\"https://www.thuiskapper.app/aanmelden/\" rel=\"noopener noreferrer\"><i class=\"fas fa-sign-in-alt\"></i> Book a barber</a>\n        <a target=\"_blank\" href=\"https://www.thuiskapper.app/contact-opnemen\" rel=\"noopener noreferrer\"> <i class=\"fas fa-envelope-open-text\"></i> Contact us</a>\n      </Router>\n      <div>\n        <div id=\"price_detail\">\n          <img src=\"https://cdn.thuiskapper.app/logos/favicon-32x32.png\" alt=\"tkt small\" />\n          <span>$ 0,08</span>\n        </div>\n        <strong>Social Platforms</strong>\n          <div>\n          <a target=\"_blank\" title=\"ThuisKapper Discord\" rel=\"noopener noreferrer\" href=\"https://discord.gg/8VKeK9uvjk\"><i class=\"fab fa-discord\"></i></a>\n          <a target=\"_blank\" title=\"ThuisKapper Telegram\" rel=\"noopener noreferrer\" href=\"http://t.me/ThuisKapperApp\"><i class=\"fab fa-telegram\"></i></a>\n          <a target=\"_blank\" title=\"ThuisKapper Twitter\" rel=\"noopener noreferrer\" href=\"https://twitter.com/KapperThuis\"><i class=\"fab fa-twitter\"></i></a>\n          <a target=\"_blank\" title=\"ThuisKapper Facebook\" rel=\"noopener noreferrer\" href=\"https://www.facebook.com/ThuisKapperApp/\"><i class=\"fab fa-facebook\"></i></a>\n</div><div>\n          <a target=\"_blank\" title=\"ThuisKapper LinkedIn\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/company/thuiskapper/\"><i class=\"fab fa-linkedin\"></i></a>\n          <a target=\"_blank\" title=\"ThuisKapper Github\" rel=\"noopener noreferrer\" href=\"https://github.com/ThuisKapper\"><i class=\"fab fa-github\"></i></a>\n          <a target=\"_blank\" title=\"ThuisKapper Android\" rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=app.thuiskapper.webapp&hl=nl&gl=US\"><i class=\"fab fa-android\"></i></a>\n          <a target=\"_blank\" title=\"ThuisKapper iPhone (iOS)\" rel=\"noopener noreferrer\" href=\"https://apps.apple.com/nl/app/thuiskapper-app/id1540295759\"><i class=\"fab fa-apple\"></i></a>\n      </div></div>\n    </Menu>\n  );\n};\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\nimport Navbar from './Navbar'\nimport Home from '../components/Home'\nimport Contact from '../components/Contact'\nimport Sidebar from '../Sidebar';\nimport Eth from 'ethjs-query';\nimport queryString from 'querystringify'\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport '../Sidebar.css';\nimport './App.css';\n\nconst Web3 = require('web3');\nconst metaMarkAddress = \"0x8a8d90d6b15cb15a5921884bec1c5bb9bfbf22f1\";\n\nclass App extends Component {\n\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n  }\n\n  constructor(props) {\n    const {\n      tokenName = 'ThuisKapperToken',\n        tokenSymbol = 'TKT',\n        tokenDecimals = 18,\n        tokenAddress = metaMarkAddress,\n        tokenImage = 'https://pbs.twimg.com/profile_images/802481220340908032/M_vde_oi_400x400.jpg',\n        tokenNet = '1',\n        message = '',\n        errorMessage = '',\n        net = '1',\n    } = props\n\n    super(props)\n\n    this.state = {\n      tokenName: '',\n      tokenSymbol: '',\n      tokenDecimals: '',\n      tokenAddress: '',\n      tokenImage: '',\n      tokenNet: '',\n      message: '',\n      errorMessage: '',\n      net: '',\n      account: '',\n      postCount: 0,\n      posts: [],\n      loading: true,\n      tktWaarde: '',\n      message: true,\n      errorMessage: '',\n      web3Provider: '',\n      isToggleOn: ''\n    }\n\n\n        this.updateNet()\n\n  }\n  _addTestAlert = () => {\n    this.setState({\n      content: \"Purchase \" + this.refs.waarde.value + \" (TKT), for \" + this.refs.waarde.value/12.5 + \" USD.\",\n      tktWaarde: this.refs.waarde.value\n    })\n\n  }\n\n    _connectWallet = () =>  {\n      this.loadWeb3()\n      this.loadBlockchainData()\n        this.setState({\n          isToggleOn: \"Connected\"\n        })\n    }\n\n    async updateNet () {\n      const provider = window.web3.currentProvider\n      const eth = new Eth(provider)\n      const realNet = await eth.net_version()\n      this.setState({ net: realNet })\n    }\n\n\n  render(props,context) {\n    let content = null;\n    let add_to_mmask = null;\n    if (this.state.account !== '') {\n      add_to_mmask = (\n        <button className=\"addTkt\" onClick = {async (event) => {\n          const web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n              web3.sendAsync({\n                method: 'metamask_watchAsset',\n                params: {\n                  \"type\":\"BEP20\",\n                  \"options\":{\n                    \"address\": \"0x8a8d90d6b15cb15a5921884bec1c5bb9bfbf22f1\",\n                    \"symbol\": \"TKT\",\n                    \"decimals\": 18,\n                    \"image\": \"tokenImage\",\n                  },\n                },\n                id: Math.round(Math.random() * 100000),\n              }, (err, added) => {\n                console.log('provider returned', err, added)\n                if (err || 'error' in added) {\n                  this.setState({\n                    errorMessage: 'There was a problem adding the token.',\n                    message: '',\n                  })\n                  return\n                }\n                this.setState({\n                  message: 'Token added!',\n                  errorMessage: '',\n                })\n              })\n            }}\n          >Add TKT to Wallet</button>\n\n      )\n    }\n    if (this.state.account !== '') {\n\n      const search = window.location.search\n      const params = queryString.parse(search)\n\n      for (let key in params) {\n        this.state[key] = params[key]\n      }\n\n      this.updateNet()\n      content = (\n        <div>\n          <strong>Connected with adress:</strong>\n          <span class=\"eth_adres\">{this.state.account}</span>\n\n            <form method=\"_POST\">\n              <div className=\"pmHolder\">\n                <div className=\"pm pm_crypto\">\n                  <img src=\"https://cdn.thuiskapper.app/images/payment-bitcoin.png\" />\n                  <div>\n                    <strong>Complete your Payment with</strong>\n                    <span>Cryptocurrency</span>\n                  </div>\n                </div>\n                <div className=\"pm pm_paypal\">\n                  <img src=\"https://cdn.thuiskapper.app/images/payment-paypal.png\" />\n                  <div>\n                    <strong>Use online payment method</strong>\n                    <span>PayPal</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"pmHolder\">\n                <div className=\"pm pm_ideal\">\n                  <img src=\"https://cdn.thuiskapper.app/images/payment-ideal.png\" />\n                  <div>\n                    <strong>Dutch Payment Method</strong>\n                    <span>iDeal</span>\n                  </div>\n                </div>\n                <div className=\"pm pm_creditcard\">\n                  <img src=\"https://cdn.thuiskapper.app/images/payment-creditcard.png\" />\n                  <div>\n                    <strong>Purchase through Creditcard</strong>\n                    <span>Credit or Debit card</span>\n                  </div>\n                </div>\n              </div>\n              <input type=\"hidden\" name=\"selected_optie\" name=\"payment_method\" />\n              <input type=\"number\" className=\"efix\" placeholder=\"Enter the amount of TKT you want to purchase\" onChange={this._addTestAlert} value={ this.state.tktWaarde } ref=\"waarde\" name=\"waarde\" />\n              <input type=\"submit\" value=\"Purchase TKT\" />\n              <div>\n                <span  className=\"buy_amount\">{this.state.content}</span>\n              </div>\n          </form>\n        </div>\n      )\n    }\n    return (\n        <div id=\"outer-container\">\n          <Navbar account={this.state.account} />\n          <Sidebar pageWrapId={'page-wrap'} outerContainerId={'outer-container'} />\n          <div id=\"content-placeholder\">\n          <div className=\"wallet_adres\">\n            <button type=\"submit\" className=\"wallet_connect\" onClick={this._connectWallet}>\n              {this.state.isToggleOn ? 'Connected ' : 'Connect to your Wallet'}\n            </button>\n            {add_to_mmask}\n            {content}\n          </div>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/contact\" component={Contact} />\n            </Switch>\n          </Router>\n          </div>\n      </div>\n    );\n  }\n}\nApp.contextTypes = {\n  web3: PropTypes.object,\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}