{"version":3,"sources":["components/Navbar.js","Sidebar.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","_this","Object","classCallCheck","this","_super","call","state","showSidebar","react_default","a","createElement","className","href","target","rel","src","height","alt","id","props","account","Component","Sidebar","BurgerMenu","App","socialNetwork","postCount","posts","loading","createPost","bind","assertThisInitialized","tipPost","_callee","regenerator_default","wrap","_context","prev","next","loadWeb3","loadBlockchainData","stop","_callee2","_context2","window","ethereum","web3","Web3","enable","currentProvider","alert","_callee3","accounts","networkId","networkData","i","post","_context3","eth","getAccounts","sent","setState","net","getId","SocialNetwork","networks","Contract","abi","address","methods","concat","toConsumableArray","sort","b","tipAmount","content","_this2","send","from","once","receipt","_this3","value","components_Navbar","pageWrapId","outerContainerId","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc4cc2b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    constructor() {\n        super()\n        this.state = {showSidebar: false} // Initially we want it to be visible\n    }\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top color-nav flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"https://investment.thuiskapper.app\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src=\"https://cdn.thuiskapper.app/logos/logo-thuiskapper.png\" height=\"40px\" alt=\"ThuisKapper logo\"></img>\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { slide as Menu } from 'react-burger-menu';\n\nexport default props => {\n  return (\n    <Menu>\n      <a className=\"menu-item\" href=\"/\">\n        Whitepaper\n      </a>\n      <a className=\"menu-item\" href=\"/salads\">\n        Our Platform\n      </a>\n      <a className=\"menu-item\" href=\"/pizzas\">\n        Telegram\n      </a>\n      <a className=\"menu-item\" href=\"/desserts\">\n        Discord\n      </a>\n    </Menu>\n  );\n};\n","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport SocialNetwork from '../abis/SocialNetwork.json'\nimport Navbar from './Navbar'\nimport Sidebar from '../Sidebar';\nimport '../Sidebar.css';\n\nimport './App.css';\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('No ETH or BSC blockchain was found, please consider installing Metamask.')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = SocialNetwork.networks[networkId]\n    if(networkData) {\n      const socialNetwork = web3.eth.Contract(SocialNetwork.abi, networkData.address)\n      this.setState({ socialNetwork })\n      const postCount = await socialNetwork.methods.postCount().call()\n      this.setState({ postCount })\n      // Load Posts\n      for (var i = 1; i <= postCount; i++) {\n        const post = await socialNetwork.methods.posts(i).call()\n        this.setState({\n          posts: [...this.state.posts, post]\n        })\n      }\n      // Sort posts. Show highest tipped posts first\n      this.setState({\n        posts: this.state.posts.sort((a,b) => b.tipAmount - a.tipAmount )\n      })\n      this.setState({ loading: false})\n    } else {\n      //window.alert('SocialNetwork contract not deployed to detected network.')\n    }\n  }\n\n  createPost(content) {\n    this.setState({ loading: true })\n    this.state.socialNetwork.methods.createPost(content).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  tipPost(id, tipAmount) {\n    this.setState({ loading: true })\n    this.state.socialNetwork.methods.tipPost(id).send({ from: this.state.account, value: tipAmount })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    }\n\n    this.createPost = this.createPost.bind(this)\n    this.tipPost = this.tipPost.bind(this)\n  }\n\n  render() {\n    return (\n      <div id=\"outer-container\">\n        <Navbar account={this.state.account}>\n\n        </Navbar>\n                <Sidebar pageWrapId={'page-wrap'} outerContainerId={'outer-container'} />\n        <div id=\"content-placeholder\">\n        <h1>Whitepaper ThuisKapperToken (TKT)</h1>\n<p>ThuisKapperTokens (TKT), a new cryptocurrency created to represent and support the production and promotion of our ThuisKapper.app web- platform and iOS and Android application. Our platform is created for mobile barbers and hairdressers to seek and find clients near their location in The Netherlands.</p>\n\n<p>This document will relay all information about the use cases of our TKT, including it’s structure, distribution, utility and timeline’s for our planned development. Overtime changes and updates will be featured in this document which is available at: https://tkt.thuiskapper.app.</p>\n\n<h2>Platform for Barbers and Hairdressers</h2>\n<p>Our platform was invented after the first wave of Covid-19 in 2020 and we launched in the last semester of 2020. It has been around 9 months since we officially launched our beta version of thuiskapper.app. We have run a test cycle with 1 barber located in Rotterdam.</p>\n\n<p>During that cycle we experienced how easy it was for the barber to communicate with the clients through our platform. We also personally asked the clients and barbers for their opinions and if they had any suggestions to make our platform more customer friendly, which we have implanted into our platform.</p>\n\n<h2>An existing company, backed by a cryptocurrency</h2>\n<p>Become part of our company and earn your part and share of the profits generated by our platform. Our ThuisKapper.app platform will be solo backed by individual investors who will directory own a part of the company’s liquidity through the BSC blockchain (Binance Smart Chain). All profit’s that are being generated throughout our ThuisKapper.app platform fee’s will be divided as following back into the company:</p>\n<ul>\n<li>33% Liquidity will be used for: paid promotion like social ads and Adwords for example. They will be spend directly back into growth of the company.</li>\n<li>33% Liquidity will be used for: workers and infrastructure within the company such as: devices to automate certain processes with Python.</li>\n<li>34% Liquidity will constantly be added in our own TKT liquidity pool to increase the value of TKT.</li>\n</ul>\n<p>Eventually the Paid promotion and workers / infrastructure liquidity percentages may differ from original. The 34% Liquidity that we will add into to the pool will stay forever until we are at the moon!</p>\n\n<h3>Paid Promotions</h3>\n<p>For paid promotions we will be using social media platforms as: Instagram, Facebook and Google Adwords. We currently having good results and our Adwords promotions and are looking forward to extend our promo’s to the Facebook and Instagram marketplaces.</p>\n\n<h3>Workers and infrastructure</h3>\n<p>Personal can’t work for free unfortunately, but lucky as we are Python does work for free but only costs us a little bit of electricity and time to program to our desires. To increase the visits of our platform we want to build multiple web- data scrapers to contact barbers and hairdressers to start working for us as we can easy find the clientell.</p>\n\n<p>One example is a Dutch online open market place: www.marktplaats.nl, where mobile barbers create advertisements for their services on location. We can build Python automation bots that will automatically contact (New) barbers or mobile hairdressers through WhatsApp when their WhatsApp phone number has not been found yet in our database.</p>\n<p>We want to create a certain amount of automatization tools in order to keep the platform running 24/7 without actually someone have to work, besides customer support. A lot of python tools take a lot of RAM and good infrastructure of devices and security which require funds  and time to be created and to keep the computers running.</p>\n\n\n<h2>TKT Liquidity Pool</h2>\n<ul>\n<li><strong>TKT Contract Adres (BSC Scan): 0xd001cdd0f310e7e7b2ab2689ec49044e8dcb084a</strong></li>\n<li>Company wallet 1: 0x19E7b2cd31B59efD61D68e008f3F2C3bFF8f4220</li>\n<li>Company wallet 2: 0xe98792d549A8cCa50E096610a13d52a95bFFDaae</li>\n<li>Company wallet 3: 0xf1d749D35B0905852E3F1a862edB02bE5377E864</li>\n<li>Company wallet 4: 0xa09a106d5FCb2DBE614E43E82cAF54191cC290eF</li>\n<li>Company wallet 5: 0x81971e542190E12366e8CA53bAacAF2cd95dfEed</li>\n</ul>\n\n<h2>Token Distribution</h2>\n<p>Initial Pre-Sale will be valued at 0,05$ per TKT and there will be a limited supply available through the pre-sale which will be 2,000,000 TKT tokens. After the presale we will provide the liquidity and will slowly bring 8,000,000 TKT to the market in late 2021 / 2022.</p>\n<p>We will keep 40,000,000 tokens aside each kept on different adreses (10M e/a) for future extension to other country’s and development purposes. When we have more information about expansion we will update our white paper to clarify our business progress.</p>\n<h2>Project Development</h2>\n<p>Information following a.s.a.p.</p>\n<h2>Legal Disclaimer</h2>\n\n<p>Information following a.s.a.p.</p>\n\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}